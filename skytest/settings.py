# -*- coding: UTF-8 -*-
"""
Django settings for skytest project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import sys
reload(sys)
sys.setdefaultencoding('utf8')
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6krrl18)s4z^zxrt3z!-ds&af^xqo4x&mawzksws4&gcq78tct'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'skytest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'skytest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

import os

import ldap
from django_auth_ldap.config import LDAPSearch
AUTHENTICATION_BACKENDS = (
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

basedn = "OU=skymobi,DC=sky-mobi,DC=com"
AUTH_LDAP_SERVER_URI = 'ldap://192.192.192.192:389'
AUTH_LDAP_BIND_DN = 'user'
AUTH_LDAP_BIND_PASSWORD = "passwd"

# 用户的DN是uid=caojun,ou=People,dc=ldap,dc=ssotest,dc=net，所以用uid
AUTH_LDAP_USER_SEARCH = LDAPSearch('OU=skymobi,DC=sky-mobi,DC=com', ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)")

AUTH_LDAP_USER_ATTR_MAP = {
     "first_name": "givenName",
     "last_name": "sn",
     "email": "mail"
}

#import ldap
#from django_auth_ldap.config import LDAPSearch #导入LDAP model
#
#AUTHENTICATION_BACKENDS = (  
#    'django_auth_ldap.backend.LDAPBackend',  #配置为先使用LDAP认证，如通过认证则不再使用后面的认证方式
#    'django.contrib.auth.backends.ModelBackend',  
#)  
#
#AUTH_LDAP_SERVER_URI = 'ldap://192.168.106.35:389'
#AUTH_LDAP_BIND_DN = 'yunwei_api@sky-mobi.com'
#AUTH_LDAP_BIND_PASSWORD = 'abc123@' 
#OU = unicode('OU=skymobi,DC=sky-mobi,DC=com', 'utf8') #限制哪个OU中的用户可以进行AD认证。如果OU中包含有中文字符，则需要这样写，否则会出现ascii无法识别的报错（UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position）
## OU0 = 'OU=ServerAdmin,DC=uxin,DC=youxinpai,DC=com'
## OU = unicode('OU=优,DC=uxin,DC=youxinpai,DC=com', 'utf8')
## OU1 = u'OU=优,DC=uxin,DC=youxinpai,DC=com'
## OU2 = u'OU=\u4f18,DC=uxin,DC=youxinpai,DC=com'
## OU == OU1 == OU2 #返回True
##检索单个OU
#AUTH_LDAP_USER_SEARCH = LDAPSearch(OU, ldap.SCOPE_SUBTREE, "(&(objectClass=person)(sAMAccountName=%(user)s))")
#
## 检索多个OU：
## AUTH_LDAP_USER_SEARCH = LDAPSearchUnion(  
##     LDAPSearch("ou=user,ou=ou1,ou=ou,dc=cn,dc=com",ldap.SCOPE_SUBTREE, "(&(objectClass=user)(sAMAccountName=%(user)s))"),  
##     LDAPSearch("ou=user,ou=ou2,ou=ou,dc=cn,dc=com",ldap.SCOPE_SUBTREE, "(&(objectClass=user)(sAMAccountName=%(user)s))"),  
## )  
#
##将账号的姓、名、邮件地址保存到django的auth_user表中，在admin后台可以看到
#AUTH_LDAP_USER_ATTR_MAP = {  
#    "first_name": "givenName",
#    "last_name": "sn",
#    "email": "mail"
#}
#
#
#from django_auth_ldap.config import LDAPSearch, LDAPSearchUnion, GroupOfNamesType  
#
#AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr="cn") #返回的组的类型，并用来判断用户与组的从属关系
#
#OUg = unicode('OU=skymobi,DC=sky-mobi,DC=com', 'utf8')
#AUTH_LDAP_GROUP_SEARCH = LDAPSearch(OUg,ldap.SCOPE_SUBTREE, "(objectClass=group)" )  #搜索某个OU下组信息
# 
#AUTH_LDAP_MIRROR_GROUPS = True  #导入用户的组信息，在用户登录的时候把用户的域组关系同步过来。每次用户登录时，都会把用户的组关系删除，重新从ldap中进行同步（解决办法参考后面）
#
#AUTH_LDAP_ALWAYS_UPDATE_USER = True #是否同步LDAP修改
